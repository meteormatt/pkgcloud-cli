#!/usr/bin/env node
var program = require('commander');
var helpers = require('../../../helpers');
var table = require('cli-table');

program
  .option('-c, --config <path>', 'set config path [./cloud.json]')
  .parse(process.argv);

var config = program.config;
if (!config) {
  config = process.env.HOME+'/pkgcloud-cli.json';
}

var outputFlavors = function(err, flavors) {
  if (err) {
    console.log(err);
    process.exit(1);
  }
  var tbl = new table({
    head: ['ID', 'NAME', 'RAM', 'DISK', 'VCPUS'],
    colWidths: [20, 30, 10, 10, 10]
  });
  for (var iter in flavors) {
    var flv = flavors[iter];
    var data = [
      flv.id,
      flv.name || 'N/A',
      flv.ram || 'N/A',
      flv.disk || 'N/A',
      flv.vcpus || 'N/A'];
    tbl.push(data);
  }
  console.log(tbl.toString());
};

helpers.init(config, helpers.CLIENT_TYPES.compute, function(err, cloud) {
  cloud.getFlavors(outputFlavors);
});

/*
var outputAllFlavors = function(err, regions) {
  if (err) {
    console.log(err);
    process.exit(1);
  }
  for (var reg in regions) {
    var tbl = new table({
      head: ['ID', 'NAME', 'RAM', 'DISK', 'VCPUS'],
      colWidths: [15, 30, 10, 10, 10]
    });
    console.log('================================');
    console.log('Region: '+reg);
    var flavors = regions[reg];
    for (var iter in flavors) {
      var flv = flavors[iter];
      var data = [
        flv.id,
        flv.name || 'N/A',
        flv.ram || 'N/A',
        flv.disk || 'N/A',
        flv.vcpus || 'N/A'];
      tbl.push(data);
    }
    console.log(tbl.toString());
  }
});
*/
